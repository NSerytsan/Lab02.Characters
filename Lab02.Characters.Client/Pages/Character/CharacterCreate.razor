@page "/character/create"
@using Models.Dtos.Character
@using Models.Dtos.Skill
@using Models.Dtos.Weapon
@inject ICharacterService _characterService
@inject NavigationManager _navigationManager
@inject IWeaponService _weaponService
@inject ISkillService _skillService

<div class="row my-2">
    <h3 class="card-title text-primary mb-3 ml-3">@Title Персонажа</h3>

    <div class="col-md-10">
        <EditForm Model="Character" OnValidSubmit="CreateCharacter">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label class="col-form-label">Ім'я</label>
                <InputText @bind-Value="Character.Name" class="form-control"></InputText>
                <ValidationMessage For="()=>Character.Name"></ValidationMessage>
            </div>
            <div class="form-group">
                <label class="col-form-label">Здоров'я</label>
                <InputNumber @bind-Value="Character.HealthPoints" class="form-control"></InputNumber>
                <ValidationMessage For="()=>Character.HealthPoints"></ValidationMessage>
            </div>
            <div class="form-group">
                <label class="col-form-label">Атака</label>
                <InputNumber @bind-Value="Character.Attack" class="form-control"></InputNumber>
                <ValidationMessage For="()=>Character.Attack"></ValidationMessage>
            </div>
            <div class="form-group">
                <label class="col-form-label">Захист</label>
                <InputNumber @bind-Value="Character.Defense" class="form-control"></InputNumber>
                <ValidationMessage For="()=>Character.Defense"></ValidationMessage>
            </div>
            <div class="form-group">
                <label class="col-form-label">Біографія</label>
                <InputText @bind-Value="Character.Biography" class="form-control"></InputText>
                <ValidationMessage For="()=>Character.Biography"></ValidationMessage>
            </div>
            <div class="form-group">
                <label class="col-form-label">Тип</label>
                <InputSelect @bind-Value="Character.WeaponId" class="form-control">
                    <option value="0">Виберіть зброю</option>
                    @foreach (var weapon in Weapons)
                    {
                        <option value="@weapon.Id">@weapon.Name</option>
                    }
                </InputSelect>
                <ValidationMessage For="()=>Character.WeaponId"></ValidationMessage>
            </div>
            <div class="form-group mt-2 mb-4">
                <label class="col-form-label">Навички</label>
                <CheckBoxList Data="@Skills" TextField="@((item)=>item.Name)" ValueField="@((item)=>item.Id)"
                    SelectedValues="@SelectedIds" />

            </div>
            <div class="form-group py-2">
                <button class="btn btn-primary">@Title</button>
                <NavLink href="character" class="btn btn-secondary">До списку</NavLink>
            </div>
        </EditForm>
    </div>
</div>

@code
{
    private string Title { get; set; } = "Створити";
    private CreateCharacterDto Character { get; set; } = new() { Biography = string.Empty };
    private IEnumerable<WeaponDto> Weapons { get; set; } = new List<WeaponDto>();
    private IEnumerable<SkillDto> Skills { get; set; } = new List<SkillDto>();
    protected List<string> SelectedIds = new List<string>();
    protected override async Task OnInitializedAsync()
    {
        Weapons = (await _weaponService.GetAllAsync()).ToList();
        Skills = (await _skillService.GetAllAsync()).ToList();
    }

    private async Task CreateCharacter()
    {
        Character.SkillIds = SelectedIds.Select(i => int.Parse(i));
        await _characterService.AddAsync(Character);
        _navigationManager.NavigateTo("character");
    }
}